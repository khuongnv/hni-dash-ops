import o from"node:process";globalThis._importMeta_={url:import.meta.url,env:o.env};import{Server as e}from"node:http";import{Server as t}from"node:https";import{t as n,d as r,u as s,a as p,s as i,b as a}from"./chunks/_/nitro.mjs";import"node:events";import"node:buffer";import"node:fs";import"node:path";import"node:crypto";import"node:url";const m=o.env.NITRO_SSL_CERT,d=o.env.NITRO_SSL_KEY,l=a(),c=m&&d?new t({key:d,cert:m},n(l.h3App)):new e(n(l.h3App)),v=r(o.env.NITRO_PORT||o.env.PORT)||3e3,T=o.env.NITRO_HOST||o.env.HOST,f=o.env.NITRO_UNIX_SOCKET,h=c.listen(f?{path:f}:{port:v,host:T},e=>{e&&(console.error(e),o.exit(1));const t=m&&d?"https":"http",n=h.address();if("string"==typeof n)return void console.log(`Listening on unix socket ${n}`);const r=(s().app.baseURL||"").replace(/\/$/,""),p=`${t}://${"IPv6"===n.family?`[${n.address}]`:n.address}:${n.port}${r}`;console.log(`Listening on ${p}`)});p(),i(h,l);const _={};export{_ as default};
