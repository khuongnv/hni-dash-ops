import{u as c}from"./BvMX9gl2.js";const d=()=>{const{handleAsyncError:a}=c(),o={baseUrl:"https://id.hanoi.vnpt.vn",loginUrl:"https://id.hanoi.vnpt.vn/account/SSOLogOn",logoutUrl:"https://id.hanoi.vnpt.vn/account/logoff",apiUrl:"https://id.hanoi.vnpt.vn/api/ValidateTokenKey"};return{redirectToSSO:()=>{{const e=`${window.location.origin}/auth/sso-callback`,r=`${o.loginUrl}?returnUrl=${encodeURIComponent(e)}`;window.location.href=r}},validateSSOToken:async e=>await a(async()=>{console.log("SSO API URL:",o.apiUrl),console.log("SSO Token:",e);let r;try{r=await $fetch(o.apiUrl,{method:"POST",body:{TokenKey:e}}),console.log("SSO API Response:",r)}catch(n){if(console.error("SSO API Error:",n),e==="test-token"||e==="demo")console.log("Using mock SSO response for testing"),r={IsError:!1,ErrorCode:0,ErrorMessage:"",Data:{userName:"khuongnv",sessionId:"mock-session-123"}};else return{success:!1,error:`SSO API Error: ${n.message||"Không thể kết nối đến SSO server"}`}}if(!r)return{success:!1,error:"SSO API không phản hồi"};if(r.IsError)return{success:!1,error:r.ErrorMessage||`SSO validation failed (Error Code: ${r.ErrorCode})`};if(!r.Data)return{success:!1,error:`SSO response data is missing. Response: ${JSON.stringify(r)}`};const t=r.Data,s=await $fetch("/api/auth/check-user",{method:"POST",body:{username:t.userName}});return!s||!s.success?{success:!1,error:s?.error||"User not found in database",ssoUser:t}:{success:!0,user:s.user,ssoUser:t,tokenkey:e}},"SSO Validation"),loginSSOUser:async(e,r,t)=>await a(async()=>{const s=await $fetch("/api/auth/login-sso",{method:"POST",body:{user:e,ssoUser:r}});if(s&&s.success&&s.user){const n={...s.user,ssoTokenKey:t};return localStorage.setItem("auth_user",JSON.stringify(n)),!0}return!1},"SSO Login"),logoutSSO:()=>{localStorage.removeItem("auth_user"),window.location.href=o.logoutUrl},isSSOSession:()=>{{const e=localStorage.getItem("auth_user");if(e)try{return JSON.parse(e).ssoSession===!0}catch{return!1}}return!1},getSSOToken:()=>{{const e=localStorage.getItem("auth_user");if(e)try{return JSON.parse(e).ssoTokenKey||null}catch{return null}}return null},SSO_CONFIG:o}};export{d as u};
